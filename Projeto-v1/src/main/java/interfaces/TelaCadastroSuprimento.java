/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaces;

import classes.Suprimento;
import enums.TipoSuprimento;
import gerenciamento.GerenciamentoHospitalar;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Amanda
 */
public class TelaCadastroSuprimento extends javax.swing.JFrame {

    GerenciamentoHospitalar admHospital;
    ArrayList<Suprimento> listaSuprimentos;
    DefaultTableModel todosSuprimentos;
    /**
     * Creates new form TelaInicialAdministrador
     */
    public TelaCadastroSuprimento(GerenciamentoHospitalar admHospital) {
        initComponents();
        this.admHospital = admHospital;
        this.setLocationRelativeTo(null);
        this.estoque.setEnabled(false);
        this.listaSuprimentos = this.admHospital.getSuprimentos();
        todosSuprimentos = (DefaultTableModel) tabelaSuprimentos.getModel();
        todosSuprimentos.addColumn("Tipo de Suprimento");
        todosSuprimentos.addColumn("Nome");
        todosSuprimentos.addColumn("Estoque");
        todosSuprimentos.addColumn("Valor Unitário");
        todosSuprimentos.addColumn("Observações");
        
        if(!this.listaSuprimentos.isEmpty()){
            preencheTabelaSuprimento();
            desativarLimparCampos();
        } else {
            buscar.setEnabled(false);
        }
        
        preencheTipoSuprimento();
    }
    
    private void preencheTipoSuprimento(){
        listaTipoSuprimento.removeAllItems();
        for(TipoSuprimento ts : TipoSuprimento.values()){
            listaTipoSuprimento.addItem(ts.getTipoSuprimento());
        }
    }
    
    private void preencheTabelaSuprimento(){
        for(Suprimento s : listaSuprimentos){
            todosSuprimentos.addRow(new Object[]{s.getTipo().getTipoSuprimento(),
            s.getNome(),s.getQuantidadeEstoque(),"R$ " + s.getValorUnitario(),
            s.getObservacoes()});
        }
    }
    
    private void atualizaTabela(){
        todosSuprimentos.setRowCount(0);
        preencheTabelaSuprimento();
    }
    
    private void desativarLimparCampos(){
        nomeSuprimento.setText("");
        preencheTipoSuprimento();
        listaTipoSuprimento.setEnabled(false);
        valorUnitario.setText("");
        valorUnitario.setEnabled(false);
        observacoes.setText("");
        observacoes.setEnabled(false);
        cadastrar.setEnabled(false);
        buscar.setEnabled(true);
    }
    
    private void ativaCamposCadastro(){
        listaTipoSuprimento.setEnabled(true);
        valorUnitario.setText("");
        valorUnitario.setEnabled(true);
        observacoes.setText("");
        observacoes.setEnabled(true);
        cadastrar.setEnabled(true);
    }
    
    private void mostrarInformacoes(Suprimento suprimento){
        listaTipoSuprimento.setEnabled(true);
        int cont = 0;
        for(TipoSuprimento ts : TipoSuprimento.values()){
            if(suprimento.getTipo().equals(ts)){
                listaTipoSuprimento.setSelectedIndex(cont);
            }
            cont++;
        }
        listaTipoSuprimento.setEditable(false);
        valorUnitario.setEnabled(true);
        valorUnitario.setEditable(false);
        valorUnitario.setText("" + suprimento.getValorUnitario());
        estoque.setEnabled(true);
        estoque.setEditable(false);
        estoque.setText("" + suprimento.getQuantidadeEstoque());
        observacoes.setEnabled(true);
        observacoes.setEditable(false);
        observacoes.setText(suprimento.getObservacoes());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaSuprimentos = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        nomeSuprimento = new javax.swing.JTextField();
        buscar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        listaTipoSuprimento = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        valorUnitario = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        estoque = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        observacoes = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        voltar = new javax.swing.JButton();
        cadastrar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        sair = new javax.swing.JMenuItem();
        gerenciar = new javax.swing.JMenu();
        leitos = new javax.swing.JMenu();
        cadastrarLeito = new javax.swing.JMenuItem();
        alterarLeito = new javax.swing.JMenuItem();
        alterarStatus = new javax.swing.JMenuItem();
        verificarLeitos = new javax.swing.JMenuItem();
        suprimentos = new javax.swing.JMenu();
        novoSuprimento = new javax.swing.JMenuItem();
        alterarEstoque = new javax.swing.JMenuItem();
        verificarSuprimentos = new javax.swing.JMenuItem();
        internacoes = new javax.swing.JMenu();
        verificarInternacoes = new javax.swing.JMenuItem();
        recursosHumanos = new javax.swing.JMenu();
        medicos = new javax.swing.JMenu();
        novoMedico = new javax.swing.JMenuItem();
        alterarDadosMedico = new javax.swing.JMenuItem();
        listaMedicos = new javax.swing.JMenuItem();
        buscarMedicos = new javax.swing.JMenu();
        especialidadeMedico = new javax.swing.JMenuItem();
        dataAdmissaoMedico = new javax.swing.JMenuItem();
        enfermeiros = new javax.swing.JMenu();
        novoEnfermeiro = new javax.swing.JMenuItem();
        alterarDadosEnfermeiro = new javax.swing.JMenuItem();
        listaEnfermeiros = new javax.swing.JMenuItem();
        tecnicos = new javax.swing.JMenu();
        novoTecnico = new javax.swing.JMenuItem();
        alterarDadosTecnico = new javax.swing.JMenuItem();
        listaTecnicos = new javax.swing.JMenuItem();
        farmaceuticos = new javax.swing.JMenu();
        novoFarmaceutico = new javax.swing.JMenuItem();
        alterarDadosFarmaceutico = new javax.swing.JMenuItem();
        listaFarmaceuticos = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastrar Leito");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Cadastro de Suprimento");

        tabelaSuprimentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabelaSuprimentos);

        jLabel2.setText("Nome do Suprimento:");

        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        jLabel3.setText("Tipo:");

        listaTipoSuprimento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Valor Unitário:");

        jLabel5.setText("Estoque:");

        estoque.setText("0");

        jLabel6.setText("Observações:");

        observacoes.setColumns(20);
        observacoes.setRows(5);
        jScrollPane2.setViewportView(observacoes);

        voltar.setText("Voltar");
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });

        cadastrar.setText("Cadastrar");
        cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarActionPerformed(evt);
            }
        });

        jMenu1.setText("Geral");

        sair.setText("Sair");
        sair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sairMouseClicked(evt);
            }
        });
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        });
        jMenu1.add(sair);

        jMenuBar1.add(jMenu1);

        gerenciar.setText("Gerenciamento Hospitalar");

        leitos.setText("Leitos");

        cadastrarLeito.setText("Cadastrar");
        cadastrarLeito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarLeitoActionPerformed(evt);
            }
        });
        leitos.add(cadastrarLeito);

        alterarLeito.setText("Alterar");
        leitos.add(alterarLeito);

        alterarStatus.setText("Alterar Status");
        alterarStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarStatusActionPerformed(evt);
            }
        });
        leitos.add(alterarStatus);

        verificarLeitos.setText("Verificar Leitos");
        leitos.add(verificarLeitos);

        gerenciar.add(leitos);

        suprimentos.setText("Suprimentos");

        novoSuprimento.setText("Cadastrar Novo Suprimento");
        novoSuprimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoSuprimentoActionPerformed(evt);
            }
        });
        suprimentos.add(novoSuprimento);

        alterarEstoque.setText("Alterar Estoque");
        alterarEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarEstoqueActionPerformed(evt);
            }
        });
        suprimentos.add(alterarEstoque);

        verificarSuprimentos.setText("Verificar Suprimentos");
        suprimentos.add(verificarSuprimentos);

        gerenciar.add(suprimentos);

        internacoes.setText("Internações");

        verificarInternacoes.setText("Verificar Internações");
        internacoes.add(verificarInternacoes);

        gerenciar.add(internacoes);

        jMenuBar1.add(gerenciar);

        recursosHumanos.setText("Recursos Humanos");

        medicos.setText("Médicos");

        novoMedico.setText("Novo Médico");
        novoMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoMedicoActionPerformed(evt);
            }
        });
        medicos.add(novoMedico);

        alterarDadosMedico.setText("Alterar Dados do Médico");
        medicos.add(alterarDadosMedico);

        listaMedicos.setText("Lista de Médicos");
        listaMedicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaMedicosActionPerformed(evt);
            }
        });
        medicos.add(listaMedicos);

        buscarMedicos.setText("Buscar Médicos");

        especialidadeMedico.setText("Por Especialidade");
        buscarMedicos.add(especialidadeMedico);

        dataAdmissaoMedico.setText("Por Data de Admisssão");
        dataAdmissaoMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataAdmissaoMedicoActionPerformed(evt);
            }
        });
        buscarMedicos.add(dataAdmissaoMedico);

        medicos.add(buscarMedicos);

        recursosHumanos.add(medicos);

        enfermeiros.setText("Enfermeiros");

        novoEnfermeiro.setText("Novo Enfermeiro");
        enfermeiros.add(novoEnfermeiro);

        alterarDadosEnfermeiro.setText("Alterar Dados do Enfermeiro");
        enfermeiros.add(alterarDadosEnfermeiro);

        listaEnfermeiros.setText("Lista de Enfermeiros");
        enfermeiros.add(listaEnfermeiros);

        recursosHumanos.add(enfermeiros);

        tecnicos.setText("Técnicos de Enfermagem");

        novoTecnico.setText("Novo Técnico");
        tecnicos.add(novoTecnico);

        alterarDadosTecnico.setText("Alterar Dados do Técnico");
        tecnicos.add(alterarDadosTecnico);

        listaTecnicos.setText("Lista de Técnicos");
        tecnicos.add(listaTecnicos);

        recursosHumanos.add(tecnicos);

        farmaceuticos.setText("Farmacêuticos");

        novoFarmaceutico.setText("Novo Farmacêutico");
        farmaceuticos.add(novoFarmaceutico);

        alterarDadosFarmaceutico.setText("Alterar Dados do Farmacêutico");
        farmaceuticos.add(alterarDadosFarmaceutico);

        listaFarmaceuticos.setText("Lista de Farmacêuticos");
        farmaceuticos.add(listaFarmaceuticos);

        recursosHumanos.add(farmaceuticos);

        jMenuBar1.add(recursosHumanos);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nomeSuprimento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buscar))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(listaTipoSuprimento, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(valorUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(estoque, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))
                    .addComponent(jSeparator1))
                .addContainerGap(27, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(voltar)
                        .addGap(381, 381, 381))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cadastrar)
                        .addGap(375, 375, 375))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nomeSuprimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(listaTipoSuprimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(valorUnitario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(estoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(cadastrar)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(voltar)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sairMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_sairMouseClicked

    private void sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_sairActionPerformed

    private void alterarStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alterarStatusActionPerformed

    private void novoSuprimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoSuprimentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_novoSuprimentoActionPerformed

    private void alterarEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarEstoqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alterarEstoqueActionPerformed

    private void dataAdmissaoMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataAdmissaoMedicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataAdmissaoMedicoActionPerformed

    private void cadastrarLeitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarLeitoActionPerformed
        // TODO add your handling code here:
        new TelaCadastroLeito(admHospital).setVisible(true);
        dispose();
    }//GEN-LAST:event_cadastrarLeitoActionPerformed

    private void novoMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoMedicoActionPerformed
        // TODO add your handling code here:
        new TelaCadastrarPessoa(admHospital, 1).setVisible(true);
        dispose();
    }//GEN-LAST:event_novoMedicoActionPerformed

    private void listaMedicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaMedicosActionPerformed
        // TODO add your handling code here:
        if(admHospital.getLeitos().isEmpty()){
            JOptionPane.showMessageDialog(null, "Nenhum Médico Cadastrado!");
        } else {
            new TelaListaMedicos(admHospital).setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_listaMedicosActionPerformed

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        // TODO add your handling code here:
        new TelaInicialAdministrador(admHospital).setVisible(true);
        dispose();
    }//GEN-LAST:event_voltarActionPerformed

    private void cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarActionPerformed
        // TODO add your handling code here:
        
        //Pega todas as informações do Suprimento - exceto estoque;
        TipoSuprimento tipo = null;
        for(TipoSuprimento ts : TipoSuprimento.values()){
            if(listaTipoSuprimento.getSelectedItem().toString().equals(ts.getTipoSuprimento())){
                tipo = ts;
            }
        }
        String nome = nomeSuprimento.getText();
        Double valor = Double.valueOf(valorUnitario.getText());
        String observacao = observacoes.getText();
        
        //Cria o Objeto Suprimento
        Suprimento suprimento = new Suprimento();
        suprimento.setTipo(tipo);
        suprimento.setNome(nome);
        suprimento.setValorUnitario(valor);
        suprimento.setObservacoes(observacao);
        suprimento.setQuantidadeEstoque(0);
        
        //Retorna Objeto Suprimento com ID
        suprimento = admHospital.retornaSuprimentoComID(suprimento);
        
        //Cadastra Suprimento no Sistema
        boolean cadastro = admHospital.cadastrarSuprimento(suprimento);
        if(cadastro){
            //Atualiza Tabela de Suprimento
            atualizaTabela();
            desativarLimparCampos();
            JOptionPane.showMessageDialog(null, "Suprimento Cadastrado!");
        } else {
            JOptionPane.showMessageDialog(null, "Algo deu Errado!");
        }
    }//GEN-LAST:event_cadastrarActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        // TODO add your handling code here:
        
        //Pegar o nome do suprimento para busca
        String nome = nomeSuprimento.getText();
        
        //Busca Suprimento
        Suprimento suprimento = admHospital.buscaSuprimentoPorNome(nome);
        
        //Verifica se o Suprimento existe ou não
        if(suprimento.getNome() == null){
            JOptionPane.showMessageDialog(null, "Suprimento não encontrado. Sistema liberado pra cadastro.");
            ativaCamposCadastro();
        } else {
            JOptionPane.showMessageDialog(null, "Suprimento localizado.");
            mostrarInformacoes(suprimento);
        }
    }//GEN-LAST:event_buscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem alterarDadosEnfermeiro;
    private javax.swing.JMenuItem alterarDadosFarmaceutico;
    private javax.swing.JMenuItem alterarDadosMedico;
    private javax.swing.JMenuItem alterarDadosTecnico;
    private javax.swing.JMenuItem alterarEstoque;
    private javax.swing.JMenuItem alterarLeito;
    private javax.swing.JMenuItem alterarStatus;
    private javax.swing.JButton buscar;
    private javax.swing.JMenu buscarMedicos;
    private javax.swing.JButton cadastrar;
    private javax.swing.JMenuItem cadastrarLeito;
    private javax.swing.JMenuItem dataAdmissaoMedico;
    private javax.swing.JMenu enfermeiros;
    private javax.swing.JMenuItem especialidadeMedico;
    private javax.swing.JTextField estoque;
    private javax.swing.JMenu farmaceuticos;
    private javax.swing.JMenu gerenciar;
    private javax.swing.JMenu internacoes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenu leitos;
    private javax.swing.JMenuItem listaEnfermeiros;
    private javax.swing.JMenuItem listaFarmaceuticos;
    private javax.swing.JMenuItem listaMedicos;
    private javax.swing.JMenuItem listaTecnicos;
    private javax.swing.JComboBox<String> listaTipoSuprimento;
    private javax.swing.JMenu medicos;
    private javax.swing.JTextField nomeSuprimento;
    private javax.swing.JMenuItem novoEnfermeiro;
    private javax.swing.JMenuItem novoFarmaceutico;
    private javax.swing.JMenuItem novoMedico;
    private javax.swing.JMenuItem novoSuprimento;
    private javax.swing.JMenuItem novoTecnico;
    private javax.swing.JTextArea observacoes;
    private javax.swing.JMenu recursosHumanos;
    private javax.swing.JMenuItem sair;
    private javax.swing.JMenu suprimentos;
    private javax.swing.JTable tabelaSuprimentos;
    private javax.swing.JMenu tecnicos;
    private javax.swing.JFormattedTextField valorUnitario;
    private javax.swing.JMenuItem verificarInternacoes;
    private javax.swing.JMenuItem verificarLeitos;
    private javax.swing.JMenuItem verificarSuprimentos;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables
}
